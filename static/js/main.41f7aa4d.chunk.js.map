{"version":3,"sources":["utils/common-functions.js","components/row.js","components/table.js","components/level.js","constants.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","utils/hooks.js","components/minigraph.js","components/home.js","components/navbar.js","components/links.js","components/faq.js","components/banner.js","components/patientsview.js","components/patients.js","components/downloadblock.js","components/patientdb.js","components/Charts/genderchart.js","components/Charts/agechart.js","components/Charts/nationalitychart.js","components/Charts/allstates.js","components/Charts/totalconfirmedchart.js","components/Charts/dailyconfirmedchart.js","components/deepdive.js","components/resourcetable.js","components/resources.js","App.js","serviceWorker.js","index.js"],"names":["months","stateCodes","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DD","DL","JK","LA","LD","PY","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","preprocessTimeseries","timeseries","data","today","Date","setHours","dataTypes","filter","d","every","dt","date","Number","getFullYear","validateCTS","map","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","formatNumber","value","numberFormatter","Intl","NumberFormat","isNaN","format","parseStateTimeseries","states_daily","statewiseSeries","Object","keys","reduce","a","c","moment","i","isBefore","entries","forEach","k","v","stateCode","toLowerCase","prev","length","push","toDate","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","handleReveal","sortDistricts","useCallback","aDistricts","sorted","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","key","handleSort","column","setItem","Fragment","className","total","onMouseEnter","onHighlightState","index","onMouseLeave","onClick","style","background","fontWeight","reveal","display","to","color","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","deathper","colSpan","title","parse","lastupdatedtime","formatDistance","e","window","innerWidth","district","onHighlightDistrict","delta","Unknown","fontSize","paddingLeft","position","marginTop","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","s","stateDistrictWiseData","el","currentTarget","querySelector","currentsortColumn","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","ref","forwardRef","data-sort-by","districtData","Level","setData","setConfirmed","setActive","recoveries","setRecoveries","setDeaths","deltas","setDeltas","parseData","MAP_TYPES","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","choroplethMap","useRef","svgRenderCount","setSvgRenderCount","ready","geoData","d3","remove","propertyField","mapType","svg","current","width","attr","height","topology","topojson","objects","graphObjectName","projection","fitSize","fitExtent","path","onceTouchedRegion","append","selectAll","features","enter","n","properties","maxConfirmed","on","name","err","console","log","handleMouseover","text","parseFloat","toFixed","toString","toTitleCase","str","split","charAt","toUpperCase","join","renderData","cells","label","domain","genLength","generatedLabels","labelDelimiter","Math","floor","n1","n2","Array","from","legendLinear","legendColor","shapeWidth","shapeHeight","titleWidth","labels","orient","scale","select","call","geoDataFile","prevCount","classed","nodes","parentNode","appendChild","id","viewBox","preserveAspectRatio","India","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","getRegionFromState","region","MapExplorer","stateTestData","regionHighlighted","onMapHighlightChange","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","testObj","setTestObj","currentMap","setCurrentMap","useMemo","currentMapData","acc","districtWiseData","find","getRegionFromDistrict","undefined","newMap","switchMapToState","topDistrict","b","obj","totaltested","updatedon","href","source","target","TimeSeries","Infinity","lastDaysCount","setLastDaysCount","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","logMode","setLogMode","type","chartType","setChartType","moving","setMoving","svgRef1","svgRef2","svgRef3","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","observer","entry","contentRect","observe","unobserve","useResizeObserver","slicedTimeseries","days","sliceTimeseriesFromEnd","graphData","ts","margin","chartRight","chartBottom","T","svg1","svg2","svg3","dateMin","setDate","getDate","dateMax","yScales","xScale","clamp","range","numTicksX","xAxis","g","ticks","yAxis","yScale","tickPadding","svgArray","plotTotal","dataTypesTotal","dataTypesDaily","colors","uniformScaleMin","min","yScaleUniformLinear","max","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","t","transition","duration","typeTotal","typeDaily","empty","reverse","node","getTotalLength","p","getPointAtLength","x","y","repeat","curve","mousemove","mouseout","xm","this","invert","bisectDate","left","f","j","focusDate","dateStr","isSame","subtract","chartKey1","chartKey2","chartKey3","currentStatusCount","currentDiff","formatedDiff","aria-label","Minigraph","timeSeriesData","setTimeSeriesData","graphElement1","graphElement2","graphElement3","graphElement4","svg4","y1","path1","datum","totalLength1","delay","path2","totalLength2","path3","totalLength3","path4","totalLength4","Home","setStateDistrictWiseData","setStateTestData","fetched","setFetched","graphOption","setGraphOption","lastUpdated","setLastUpdated","activeStateCode","setActiveStateCode","activityLog","setActivityLog","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","setRegionHighlighted","getStates","Promise","all","axios","get","response","stateDistrictWiseResponse","statesDailyResponse","updateLogResponse","stateTestResponse","statewise","cases_time_series","states_tested_data","statecode","refs","htmlFor","checked","onChange","event","disabled","JSON","stringify","selected","activity","update","replace","timestamp","dangerouslySetInnerHTML","__html","Navbar","menuVisible","setMenuVisible","location","pathname","alt","src","pages","page","pageLink","animationDelayForNavbar","displayName","Links","rel","FAQ","faq","setFaq","getFAQs","scrollTo","then","catch","error","question","answer","Banner","snippets","setSnippets","snippet","setSnippet","factoids","random","snippetChooser","interval","setInterval","clearInterval","banner","PatientsView","logs","patient","indexTwo","applyClass","setModal","setPatient","expand","patientnumber","Patients","patients","setPatients","setLogs","modal","onclick","document","getElementById","body","classList","add","parseByDate","dateannounced","list","colorMode","gender","typeoftransmission","nationality","getClassNameFn","patientIndexArg","patientIndex","switchPatient","contractedfromwhichpatientsuspected","detectedcity","detecteddistrict","detectedstate","agebracket","statepatientnumber","notes","source1","source2","source3","CSVDownloadLink","csv","Parser","encodeURIComponent","download","DownloadBlock","dataJSON","filterByObject","filters","PatientDB","filteredPatients","setFilteredPatients","setError","useLocation","setColorMode","scaleMode","setScaleMode","subDays","setFilters","raw_data","fetchRawData","handleFilters","newFilters","city","selectedIndex","getSortedValues","setValues","Set","size","GenderChart","defaults","global","tooltips","intersect","backgroundColor","displayColors","borderColor","borderWidth","titleFontColor","bodyFontColor","caretPadding","legend","hover","male","female","unknown","chartData","datasets","chartOptions","layout","padding","right","top","bottom","events","responsive","maintainAspectRatio","callbacks","tooltipItem","dataset","datasetIndex","_meta","currentValue","options","AgeChart","ages","fill","age","scales","xAxes","stacked","gridLines","yAxes","NationalityChart","hasOwnProperty","AllStatesChart","dates","elements","line","statesData","Map","status","trim","has","set","previousValue","sortedMap","code","borderCapStyle","pointBackgroundColor","pointHoverRadius","point","radius","tension","beginAtZero","precision","scaleLabel","labelString","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","TotalConfirmedChart","deceased","callback","values","DailyConfirmedChart","barDataSet","DeepDive","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","rawDataResponse","stateDailyResponse","usePanelSummaryStyles","makeStyles","theme","content","flexDirection","justifyContent","root","usePanelDetailsStyles","useListStyles","usePanelStyles","marginBottom","useItemTextStyles","primary","fontFamily","fontStyle","fontTransform","secondary","wordWrap","getNumbersLink","initialValue","numbf","numbg","numberList","iv","getFormattedLinkForAccordion","s3","match","formatedLink","links","String","getFormattedLink","rendercell","celli","cell","renderedvalue","link","row","allCells","FormattedCell","editable","React","setValue","reurl1","reinsta","refb","getSuggestions","resources","inputValue","resource","category","includes","descriptionandorserviceprovided","nameoftheorganisation","getSuggestionValue","suggestion","renderSuggestion","ResourceTable","columns","isDesktop","totalCount","onScrollUpdate","indianstate","classesPannelSummary","classesPanel","classesListItemText","classesPanelDetails","classesList","expanded","setExpanded","defaultColumn","Cell","searchValue","setSearchValue","suggestions","setSuggestions","prevIndianState","prevCity","prevCategory","onSuggestionsFetchRequested","inputProps","placeholder","newValue","renderInputComponent","TextField","fullWidth","InputLabelProps","shrink","variant","InputProps","startAdornment","InputAdornment","useTable","initialState","hiddenColumns","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","alwaysRenderSuggestions","dataLength","hasMore","next","loader","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cellindex","getCellProps","alignItems","maxWidth","overflow","ExpansionPanel","classes","panel","isExpanded","ExpansionPanelSummary","textAlign","limit","substring","parseText","ExpansionPanelDetails","List","disablePadding","dense","ListItem","divider","ListItemText","useFormControlStyles","flexGrow","useInputLabelStyles","textTransform","useMenuItemStyles","usePopOverStyles","zIndex","Resources","partData","setPartData","setCity","setCategory","setIndianState","resourcedict","setResourceDict","showTable","setShowTable","setIsDesktop","classesFormControl","classesInputLabel","classesMenuItem","classesPopOver","anchorEl","setAnchorEl","getResources","checkForResizeEvent","addEventListener","removeEventListener","hashmap","isArray","handleDisclaimerClick","handleDisclaimerClose","isDisclaimerOpen","Boolean","memocols","Header","accessor","isVisible","getCityOptions","getIndianStateOptions","getCategoryOptions","array","citydata","indexOf","filterTable","categorydata","element","changeIndianState","changedstateevent","changeCity","changedcityevent","changeCategory","changedcategoryevent","openSharingTray","message","navigator","share","url","shareUri","encodeURI","screen","w","h","open","openSharingLink","htmlColor","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FormControl","InputLabel","Select","native","labelId","defaultValue","pointerEvents","tempArr","concat","Fab","scrollTop","documentElement","history","require","createBrowserHistory","App","view","exact","component","hostname","ReactDOM","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.41f7aa4d.chunk.js","sourcesContent":["import moment from 'moment';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nconst stateCodes = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli',\n  DD: 'Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n};\n\nexport const getStateName = (code) => {\n  return stateCodes[code.toUpperCase()];\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n\nconst validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      const year = today.getFullYear();\n      return new Date(d.date + year) < today;\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat) => ({\n    date: new Date(stat.date + ' 2020'),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-IN');\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(stateCodes).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = moment();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = moment(data[i].date, 'DD-MMM-YY');\n    // Skip data from the current day\n    if (date.isBefore(today, 'Date')) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        v.push({\n          date: date.toDate(),\n          dailyconfirmed: +data[i][stateCode] || 0,\n          dailyrecovered: +data[i + 1][stateCode] || 0,\n          dailydeceased: +data[i + 2][stateCode] || 0,\n          totalconfirmed: +data[i][stateCode] + (prev.totalconfirmed || 0),\n          totalrecovered: +data[i + 1][stateCode] + (prev.totalrecovered || 0),\n          totaldeceased: +data[i + 2][stateCode] + (prev.totaldeceased || 0),\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n","import React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nimport {Link} from 'react-router-dom';\n\nfunction Row(props) {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={props.total ? 'state is-total' : 'state'}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        /* onTouchStart={() => props.onHighlightState?.(state, props.index)}*/\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>\n          <div className=\"table__title-wrapper\">\n            <span\n              className={`dropdown ${\n                props.reveal ? 'rotateRightDown' : 'rotateDownRight'\n              }`}\n              style={{display: !props.total ? '' : 'none'}}\n              onClick={() => {\n                handleReveal();\n              }}\n            >\n              <Icon.ChevronDown />\n            </span>\n            {state.state}\n            {state.state === 'West Bengal' && (\n              <Link to=\"/faq\">\n                <Icon.HelpCircle className=\"height-22\" />\n              </Link>\n            )}\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0\n              ? '-'\n              : formatNumber(state.confirmed)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\n          </span>*/}\n          {parseInt(state.active) === 0 ? '-' : formatNumber(state.active)}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0\n              ? '-'\n              : formatNumber(state.recovered)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"table__count-text\">\n            {state.deathper === '' ? '-' : state.deathper}\n          </span>\n        </td>\n      </tr>\n\n      <tr\n        className={'state-last-update'}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td colSpan={2}>\n          <div className=\"last-update\">\n            <h6>Last Updated&nbsp;</h6>\n            <h6\n              title={\n                isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(props.state.lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                ? ''\n                : `${formatDistance(\n                    new Date(formatDate(props.state.lastupdatedtime)),\n                    new Date()\n                  )} Ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td onClick={(e) => handleSort('district')}>\n          <div className=\"heading-content\">\n            <abbr title=\"District\">District</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td onClick={(e) => handleSort('confirmed')}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? 'C'\n                  : 'Cnfmd'\n                : 'Confirmed'}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n      </tr>\n\n      {sortedDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district`}\n                  style={{\n                    display: props.reveal && !props.total ? '' : 'none',\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                  /* onTouchStart={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }*/\n                >\n                  <td style={{fontWeight: 600}}>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumber(sortedDistricts[district].confirmed)}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && (\n        <React.Fragment>\n          <tr\n            className={`district`}\n            style={{display: props.reveal && !props.total ? '' : 'none'}}\n          >\n            <td style={{fontWeight: 600}}>\n              Unknown{' '}\n              <span style={{fontSize: '0.75rem', color: '#201aa299'}}>#</span>\n            </td>\n            <td>\n              <span className=\"deltas\" style={{color: '#ff073a'}}>\n                {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                  <Icon.ArrowUp />\n                )}\n                {sortedDistricts['Unknown'].delta.confirmed > 0\n                  ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                  : ''}\n              </span>\n              <span className=\"table__count-text\">\n                {formatNumber(sortedDistricts['Unknown'].confirmed)}\n              </span>\n            </td>\n          </tr>\n          <span\n            style={{\n              display: props.reveal && !props.total ? '' : 'none',\n              fontSize: '0.75rem',\n              color: '#201aa299',\n            }}\n          >\n            #\n          </span>\n          <div\n            style={{\n              display: props.reveal && !props.total ? '' : 'none',\n              fontSize: '0.5rem',\n              paddingLeft: '1rem',\n              position: 'absolute',\n              marginTop: '-0.85rem',\n              color: '#201aa299',\n              fontWeight: 600,\n            }}\n          >\n            Awaiting patient-level details from State Bulletin\n          </div>\n        </React.Fragment>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default Row;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport Row from './row';\n\nfunction Table(props) {\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state' && sortColumn !== 'deathper') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const el = e.currentTarget.querySelector('abbr');\n\n    let currentsortColumn = el.getAttribute('title').toLowerCase();\n    if (el.getAttribute('data-sort-by'))\n      currentsortColumn = el.getAttribute('data-sort-by');\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  return (\n    <React.Fragment>\n      <h5\n        className=\"table-fineprint fadeInUp\"\n        style={{animationDelay: '1.8s'}}\n        ref={props.forwardRef}\n      >\n        Compiled from State Govt. numbers <Link to=\"/faq\">Know More</Link>\n      </h5>\n      <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n        <thead>\n          <tr>\n            <th\n              className=\"sticky state-heading\"\n              onClick={(e) => handleSort(e, props)}\n            >\n              <div className=\"heading-content\">\n                <abbr title=\"State\">State/UT</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'state' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                  title=\"Confirmed\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'C'\n                      : 'Cnfmd'\n                    : 'Confirmed'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                  title=\"Active\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'A'\n                      : 'Actv'\n                    : 'Active'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'active' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                  title=\"Recovered\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'R'\n                      : 'Rcvrd'\n                    : 'Recovered'}\n                </abbr>\n                <div\n                  className={\n                    sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                  }\n                ></div>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'recovered' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                  title=\"Deaths\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'D'\n                      : 'Dcsd'\n                    : 'Deceased'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th\n              className=\"sticky\"\n              onClick={(e) => handleSort(e, props)}\n              title=\"Mortality rate\"\n            >\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                  title=\"Mortality rate\"\n                  data-sort-by=\"deathper\"\n                >\n                  M%\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'deathper' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {states.map((state, index) => {\n            if (index !== 0 && state.confirmed > 0) {\n              return (\n                <Row\n                  key={index}\n                  index={index}\n                  state={state}\n                  total={false}\n                  reveal={revealedStates[state.state]}\n                  districts={\n                    state.state in districts\n                      ? districts[state.state].districtData\n                      : []\n                  }\n                  onHighlightState={props.onHighlightState}\n                  onHighlightDistrict={props.onHighlightDistrict}\n                  handleReveal={handleReveal}\n                />\n              );\n            }\n            return null;\n          })}\n        </tbody>\n\n        <tbody>\n          {states.length > 1 && props.summary === false && (\n            <Row\n              key={0}\n              state={states[0]}\n              total={true}\n              onHighlightState={props.onHighlightState}\n            />\n          )}\n        </tbody>\n      </table>\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n        {count} States/UTS Affected\n      </h5>\n    </React.Fragment>\n  );\n}\n\nexport default Table;\n","import React, {useState, useEffect} from 'react';\nimport {formatNumber} from '../utils/common-functions';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n  const [confirmed, setConfirmed] = useState(0);\n  const [active, setActive] = useState(0);\n  const [recoveries, setRecoveries] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n  const [deltas, setDeltas] = useState(0);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  useEffect(() => {\n    const parseData = () => {\n      let confirmed = 0;\n      let active = 0;\n      let recoveries = 0;\n      let deaths = 0;\n      let deltas = {};\n      data.forEach((state, index) => {\n        if (index !== 0) {\n          confirmed += parseInt(state.confirmed);\n          active += parseInt(state.active);\n          recoveries += parseInt(state.recovered);\n          deaths += parseInt(state.deaths);\n        } else {\n          deltas = {\n            confirmed: parseInt(state.deltaconfirmed),\n            deaths: parseInt(state.deltadeaths),\n            recovered: parseInt(state.deltarecovered),\n          };\n        }\n      });\n      setConfirmed(confirmed);\n      setActive(active);\n      setRecoveries(recoveries);\n      setDeaths(deaths);\n      setDeltas(deltas);\n    };\n    parseData();\n  }, [data]);\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>Confirmed</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.confirmed > 0\n              ? '+' + formatNumber(deltas.confirmed)\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1>{formatNumber(confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">Active</h5>\n        <h4>&nbsp;</h4>\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\n        <h1 className=\"title has-text-info\">{formatNumber(active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">Recovered</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.recovered > 0\n              ? '+' + formatNumber(deltas.recovered)\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">{formatNumber(recoveries)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">Deceased</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.deaths > 0\n              ? '+' + formatNumber(deltas.deaths)\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Level;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport {legendColor} from 'd3-svg-legend';\nimport * as topojson from 'topojson';\nimport {MAP_TYPES} from '../constants';\n\nconst propertyFieldMap = {\n  country: 'st_nm',\n  state: 'district',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n}) {\n  const choroplethMap = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const maxInterpolation = 0.8;\n      const svg = d3.select(choroplethMap.current);\n      const width = +svg.attr('width');\n      const height = +svg.attr('height');\n\n      const handleMouseover = (name) => {\n        try {\n          setHoveredRegion(name, mapMeta);\n          setSelectedRegion(name);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n        projection.fitSize([width, height], topology);\n      else\n        projection.fitExtent(\n          [\n            [90, 20],\n            [width, height],\n          ],\n          topology\n        );\n\n      const path = d3.geoPath(projection);\n\n      let onceTouchedRegion = null;\n\n      svg\n        .append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .enter()\n        .append('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color =\n            n === 0\n              ? '#ffffff'\n              : d3.interpolateReds(\n                  (maxInterpolation * n) / (statistic.maxConfirmed || 0.001)\n                );\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseover', (d) => {\n          handleMouseover(d.properties[propertyField]);\n        })\n        .on('mouseleave', (d) => {\n          setSelectedRegion(null);\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', (d) => {\n          if (onceTouchedRegion) {\n            return;\n          }\n          if (mapMeta.mapType === MAP_TYPES.STATE) {\n            return;\n          }\n          changeMap(d.properties[propertyField], mapMeta.mapType);\n        })\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      svg\n        .append('path')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n      setSelectedRegion,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  const renderData = useCallback(() => {\n    const svg = d3.select(choroplethMap.current);\n\n    // Colorbar\n    const maxInterpolation = 0.8;\n    const color = d3\n      .scaleSequential(d3.interpolateReds)\n      .domain([0, statistic.maxConfirmed / maxInterpolation || 10]);\n\n    let cells = null;\n    let label = null;\n\n    label = ({i, genLength, generatedLabels, labelDelimiter}) => {\n      if (i === genLength - 1) {\n        const n = Math.floor(generatedLabels[i]);\n        return `${n}+`;\n      } else {\n        const n1 = 1 + Math.floor(generatedLabels[i]);\n        const n2 = Math.floor(generatedLabels[i + 1]);\n        return `${n1} - ${n2}`;\n      }\n    };\n\n    const numCells = 6;\n    const delta = Math.floor(\n      (statistic.maxConfirmed < numCells ? numCells : statistic.maxConfirmed) /\n        (numCells - 1)\n    );\n\n    cells = Array.from(Array(numCells).keys()).map((i) => i * delta);\n\n    svg\n      .append('g')\n      .attr('class', 'legendLinear')\n      .attr('transform', 'translate(1, 335)');\n\n    const legendLinear = legendColor()\n      .shapeWidth(36)\n      .shapeHeight(10)\n      .cells(cells)\n      .titleWidth(3)\n      .labels(label)\n      .title('Confirmed Cases')\n      .orient('vertical')\n      .scale(color);\n\n    svg\n      .select('.legendLinear')\n      .call(legendLinear)\n      .selectAll('text')\n      .style('font-size', '10px');\n  }, [statistic.maxConfirmed]);\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        renderData();\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, renderData, ready]);\n\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      const propertyField =\n        'district' in d.properties\n          ? propertyFieldMap['state']\n          : propertyFieldMap['country'];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n      <svg\n        id=\"chart\"\n        width=\"480\"\n        height=\"450\"\n        viewBox=\"0 0 480 450\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        ref={choroplethMap}\n      ></svg>\n    </div>\n  );\n}\n\nexport default ChoroplethMap;\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ChoroplethMap from './choropleth';\nimport {MAP_TYPES, MAPS_DIR} from '../constants';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport {formatDistance, format, parse} from 'date-fns';\nimport {formatNumber} from '../utils/common-functions';\nimport * as Icon from 'react-feather';\n\nconst mapMeta = {\n  India: {\n    name: 'India',\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'india',\n  },\n  'Andaman and Nicobar Islands': {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andamannicobarislands_district',\n  },\n  'Arunachal Pradesh': {\n    name: 'Arunachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'arunachalpradesh_district',\n  },\n  'Andhra Pradesh': {\n    name: 'Andhra Pradesh',\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andhrapradesh_district',\n  },\n\n  Assam: {\n    name: 'Assam',\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'assam_district',\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bihar_district',\n  },\n  Chandigarh: {\n    name: 'Chandigarh',\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chandigarh_district',\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chhattisgarh_district',\n  },\n  'Dadra and Nagar Haveli': {\n    name: 'Dadra and Nagar Haveli',\n    geoDataFile: `${MAPS_DIR}/dadranagarhaveli.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'dadranagarhaveli_district',\n  },\n  Delhi: {\n    name: 'Delhi',\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'delhi_district',\n  },\n  Karnataka: {\n    name: 'Karnataka',\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'karnataka_district',\n  },\n  Kerala: {\n    name: 'Kerala',\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kerala_district',\n  },\n  Goa: {\n    name: 'Goa',\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'goa_district',\n  },\n  Gujarat: {\n    name: 'Gujarat',\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'gujarat_district',\n  },\n  Haryana: {\n    name: 'Haryana',\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'haryana_district',\n  },\n  'Himachal Pradesh': {\n    name: 'Himachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'himachalpradesh_district',\n  },\n  'Jammu and Kashmir': {\n    name: 'Jammu and Kashmir',\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jammukashmir_district',\n  },\n  Jharkhand: {\n    name: 'Jharkhand',\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jharkhand_district',\n  },\n  Ladakh: {\n    name: 'Ladakh',\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ladakh_district',\n  },\n  Lakshadweep: {\n    name: 'Lakshadweep',\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'lakshadweep_district',\n  },\n  'Madhya Pradesh': {\n    name: 'Madhya Pradesh',\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'madhyapradesh_district',\n  },\n  Maharashtra: {\n    name: 'Maharashtra',\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'maharashtra_district',\n  },\n  Manipur: {\n    name: 'Manipur',\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'manipur_district',\n  },\n  Meghalaya: {\n    name: 'Meghalaya',\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'meghalaya_district',\n  },\n  Mizoram: {\n    name: 'Mizoram',\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mizoram_district',\n  },\n  Nagaland: {\n    name: 'Nagaland',\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'nagaland_district',\n  },\n  Odisha: {\n    name: 'Odisha',\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'odisha_district',\n  },\n  Puducherry: {\n    name: 'Puducherry',\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'puducherry_district',\n  },\n  Punjab: {\n    name: 'Punjab',\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'punjab_district',\n  },\n  Rajasthan: {\n    name: 'Rajasthan',\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rajasthan_district',\n  },\n  Sikkim: {\n    name: 'Sikkim',\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sikkim_district',\n  },\n  'Tamil Nadu': {\n    name: 'Tamil Nadu',\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tamilnadu_district',\n  },\n  Telangana: {\n    name: 'Telangana',\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'telangana_district',\n  },\n  Tripura: {\n    name: 'Tripura',\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tripura_district',\n  },\n  Uttarakhand: {\n    name: 'Uttarakhand',\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarakhand_district',\n  },\n  'Uttar Pradesh': {\n    name: 'Uttar Pradesh',\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarpradesh_district',\n  },\n\n  'West Bengal': {\n    name: 'West Bengal',\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'westbengal_district',\n  },\n};\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  if (!region.name) region.name = region.state;\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  if (!region.name) region.name = name;\n  return region;\n};\n\nfunction MapExplorer({\n  forwardRef,\n  states,\n  stateDistrictWiseData,\n  stateTestData,\n  regionHighlighted,\n  onMapHighlightChange,\n}) {\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\n    getRegionFromState(states[0])\n  );\n  const [testObj, setTestObj] = useState({});\n  const [currentMap, setCurrentMap] = useState(mapMeta.India);\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.find((state) => name === state.state)\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n        onMapHighlightChange(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n        const panelRegion = getRegionFromState(\n          states.find((state) => currentMap.name === state.state)\n        );\n        setPanelRegion(panelRegion);\n        onMapHighlightChange(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData, onMapHighlightChange]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined) {\n      return;\n    } else if (regionHighlighted === null) {\n      setSelectedRegion(null);\n      return;\n    }\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = mapMeta['India'];\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = mapMeta[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, setHoveredRegion]);\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = mapMeta[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setSelectedRegion(null);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[0].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const {districtData} = stateDistrictWiseData[name] || {};\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  useEffect(() => {\n    setTestObj(\n      stateTestData.find(\n        (obj) => obj.state === panelRegion.name && obj.totaltested !== ''\n      )\n    );\n  }, [panelRegion, stateTestData, testObj]);\n\n  return (\n    <div\n      className=\"MapExplorer fadeInUp\"\n      style={{animationDelay: '1.5s'}}\n      ref={forwardRef}\n    >\n      <div className=\"header\">\n        <h1>{currentMap.name}</h1>\n        <h6>\n          {window.innerWidth <= 769 ? 'Tap' : 'Hover'} over a{' '}\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state/ut' : 'district'}{' '}\n          for more details\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats fadeInUp\" style={{animationDelay: '2s'}}>\n          <h5>{window.innerWidth <= 769 ? 'Cnfmd' : 'Confirmed'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-blue fadeInUp\"\n          style={{animationDelay: '2.1s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Actv' : 'Active'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-green fadeInUp\"\n          style={{animationDelay: '2.2s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Rcvrd' : 'Recovered'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-gray fadeInUp\"\n          style={{animationDelay: '2.3s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Dcsd' : 'Deceased'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        {\n          <div\n            className=\"stats is-purple tested fadeInUp\"\n            style={{animationDelay: '2.4s'}}\n          >\n            <h5>{window.innerWidth <= 769 ? 'Tested' : 'Tested'}</h5>\n            <div className=\"stats-bottom\">\n              <h1>{formatNumber(testObj?.totaltested)}</h1>\n            </div>\n            <h6 className=\"timestamp\">\n              {!isNaN(parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()))\n                ? `As of ${format(\n                    parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()),\n                    'dd MMM'\n                  )}`\n                : ''}\n            </h6>\n            {testObj?.totaltested?.length > 1 && (\n              <a href={testObj.source} target=\"_noblank\">\n                <Icon.Link />\n              </a>\n            )}\n          </div>\n        }\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2>{name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>Last Updated</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  ) + ' Ago'}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <h4 className=\"district-confirmed\">\n            Confirmed cases:{' '}\n            {currentMapData[currentHoveredRegion.name]\n              ? currentMapData[currentHoveredRegion.name]\n              : 0}\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n        setSelectedRegion={setSelectedRegion}\n      />\n    </div>\n  );\n}\n\nexport default MapExplorer;\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport {sliceTimeseriesFromEnd} from '../utils/common-functions';\nimport {useResizeObserver} from '../utils/hooks';\nimport {formatNumber} from '../utils/common-functions';\n\nfunction TimeSeries(props) {\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(10);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      const slicedTimeseries = sliceTimeseriesFromEnd(\n        props.timeseries,\n        lastDaysCount\n      );\n      setIndex(slicedTimeseries.length - 1);\n      setTimeseries(slicedTimeseries);\n    }\n  }, [props.timeseries, lastDaysCount]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (ts) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = ts.length;\n      const yBuffer = 1.1;\n\n      setDatapoint(ts[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n\n      const dateMin = new Date(ts[0]['date']);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(ts[T - 1]['date']);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g) =>\n        g\n          .attr('class', 'x-axis')\n          .call(d3.axisBottom(xScale).ticks(numTicksX))\n          .style('transform', `translateY(${chartBottom}px)`);\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5))\n          .style('transform', `translateX(${chartRight}px)`);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3];\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n\n      const colors = ['#ff073a', '#28a745', '#6c757d'];\n\n      let yScales;\n      if (plotTotal) {\n        let uniformScaleMin = Infinity;\n        dataTypesTotal.forEach((type) => {\n          uniformScaleMin = Math.min(\n            uniformScaleMin,\n            d3.min(ts, (d) => d[type])\n          );\n        });\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            uniformScaleMin,\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(ts, (d) => d[type]),\n              Math.max(1, yBuffer * d3.max(ts, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(ts, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(ts, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\n          else return mode ? yScaleUniformLinear : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            0,\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.dailyconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([0, Math.max(1, yBuffer * d3.max(ts, (d) => d[type]))])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return mode ? yScaleDailyUniform : yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([ts[T - 1]], (d) => d.date)\n          .join('circle')\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(ts, date, 1);\n        if (0 <= i && i < T) {\n          if (date - ts[i - 1].date < ts[i].date - date) --i;\n          setDatapoint(ts[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = ts[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type]));\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(ts[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          f.attr('cx', xScale(ts[T - 1].date)).attr(\n            'cy',\n            yScale(ts[T - 1][type])\n          );\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const color = colors[i];\n        const yScale = yScales[i];\n        // WARNING: Bad code ahead.\n        /* X axis */\n        if (svg.select('.x-axis').empty()) {\n          svg.append('g').attr('class', 'x-axis').call(xAxis);\n        } else {\n          svg.select('.x-axis').transition(t).call(xAxis);\n        }\n        /* Y axis */\n        if (svg.select('.y-axis').empty()) {\n          svg.append('g').call(yAxis, yScale);\n        } else {\n          svg.select('.y-axis').transition(t).call(yAxis, yScale);\n        }\n        // ^This block of code should be written in a more d3 way following the\n        //  General Update Pattern. Can't find of a way to do that within React.\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(ts, (d) => d.date)\n          .join((enter) => enter.append('circle').attr('cy', chartBottom))\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        focus[i]\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...ts].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(ts, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .attr('y1', chartBottom)\n            .transition(t)\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const focusDate = moment(datapoint.date);\n  let dateStr = focusDate.format('DD MMMM');\n  dateStr += focusDate.isSame(moment().subtract(1, 'days'), 'day')\n    ? ' Yesterday'\n    : '';\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey3 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index === 0) return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{animationDelay: '2.7s'}}\n    >\n      <div className=\"timeseries\">\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Confirmed</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Recovered</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Deceased</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label=\"1 month\"\n        >\n          1M\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label=\"14 days\"\n        >\n          14D\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSeries;\n","import {useState, useEffect} from 'react';\nimport {ResizeObserver} from '@juggle/resize-observer';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction Minigraph({timeseries}) {\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n\n  useEffect(() => {\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\n  }, [timeseries]);\n\n  const graphData = useCallback(\n    (data) => {\n      if (data.length <= 1) return 0;\n\n      const margin = {top: 30, right: 10, bottom: 30, left: 0};\n      const width = 100 - margin.left - margin.right;\n      const height = 100 - margin.top - margin.bottom;\n\n      const svg1 = d3.select(graphElement1.current);\n      const svg2 = d3.select(graphElement2.current);\n      const svg3 = d3.select(graphElement3.current);\n      const svg4 = d3.select(graphElement4.current);\n\n      const x = d3\n        .scaleTime()\n        .domain(d3.extent(data, (d) => d.date))\n        .range([0, width]);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, d3.max(data, (d) => d.dailyconfirmed)])\n        .range([height, 0]);\n\n      const path1 = svg1\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#ff073a99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => x(d.date))\n            .y((d) => y1(d.dailyconfirmed))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength1 = path1.node().getTotalLength();\n      path1\n        .attr('stroke-dasharray', totalLength1 + ' ' + totalLength1)\n        .attr('stroke-dashoffset', totalLength1)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg1\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#ff073a')\n        .attr('stroke', '#ff073a')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => x(d.date))\n        .attr('cy', (d) => y1(d.dailyconfirmed))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n\n      const path2 = svg2\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#007bff99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => x(d.date))\n            .y((d) => y1(d.dailyconfirmed - d.dailyrecovered - d.dailydeceased))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength2 = path2.node().getTotalLength();\n      path2\n        .attr('stroke-dasharray', totalLength2 + ' ' + totalLength2)\n        .attr('stroke-dashoffset', totalLength2)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg2\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#007bff')\n        .attr('stroke', '#007bff')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => x(d.date))\n        .attr('cy', (d) =>\n          y1(d.dailyconfirmed - d.dailyrecovered - d.dailydeceased)\n        )\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n\n      const path3 = svg3\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#28a74599')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => x(d.date))\n            .y((d) => y1(d.dailyrecovered))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength3 = path1.node().getTotalLength();\n      path3\n        .attr('stroke-dasharray', totalLength3 + ' ' + totalLength3)\n        .attr('stroke-dashoffset', totalLength3)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg3\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#28a745')\n        .attr('stroke', '#28a745')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => x(d.date))\n        .attr('cy', (d) => y1(d.dailyrecovered))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n\n      const path4 = svg4\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#6c757d99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => x(d.date))\n            .y((d) => y1(d.dailydeceased))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength4 = path4.node().getTotalLength();\n      path4\n        .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\n        .attr('stroke-dashoffset', totalLength4)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg4\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#6c757d')\n        .attr('stroke', '#6c757d')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => x(d.date))\n        .attr('cy', (d) => y1(d.dailydeceased))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n    },\n    [\n      /* comment can be removed anytime - just kept for reducing the diff */\n    ]\n  );\n\n  useEffect(() => {\n    graphData(timeSeriesData);\n  }, [timeSeriesData, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={graphElement1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={graphElement2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={graphElement3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={graphElement4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Minigraph;\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport axios from 'axios';\nimport {formatDistance, format} from 'date-fns';\nimport * as Icon from 'react-feather';\n\nimport {\n  formatDate,\n  formatDateAbsolute,\n  preprocessTimeseries,\n  parseStateTimeseries,\n} from '../utils/common-functions';\nimport {Link} from 'react-router-dom';\n\nimport Table from './table';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport TimeSeries from './timeseries';\nimport Minigraph from './minigraph';\n\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [stateTestData, setStateTestData] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState({});\n  const [activeStateCode, setActiveStateCode] = useState('TT'); // TT -> India\n  const [activityLog, setActivityLog] = useState([]);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        stateDistrictWiseResponse,\n        {data: statesDailyResponse},\n        updateLogResponse,\n        stateTestResponse,\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n        axios.get('https://api.covid19india.org/updatelog/log.json'),\n        axios.get('https://api.covid19india.org/state_test_data.json'),\n      ]);\n      response.data.statewise.forEach((s) => {\n        s.deathper =\n          s.deaths > 0\n            ? parseFloat((s.deaths * 100) / s.confirmed).toFixed(2)\n            : '';\n      });\n      setStates(response.data.statewise);\n      const ts = parseStateTimeseries(statesDailyResponse);\n      ts['TT'] = preprocessTimeseries(response.data.cases_time_series); // TT -> India\n      setTimeseries(ts);\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\n      setStateTestData(stateTestResponse.data.states_tested_data.reverse());\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setActivityLog(updateLogResponse.data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) return setRegionHighlighted(null);\n    setRegionHighlighted({state, index});\n  };\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({district, state, index});\n  };\n\n  const onMapHighlightChange = useCallback(({statecode}) => {\n    setActiveStateCode(statecode);\n  }, []);\n\n  const refs = [useRef(), useRef(), useRef()];\n  // const scrollHandlers = refs.map((ref) => () =>\n  //   window.scrollTo({\n  //     top: ref.current.offsetTop,\n  //     behavior: 'smooth',\n  //   })\n  // );\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            <div className=\"header-mid\">\n              <div className=\"titles\">\n                <h1>India COVID-19 Tracker</h1>\n                <h6 style={{fontWeight: 600}}>A Crowdsourced Initiative</h6>\n              </div>\n              <div className=\"last-update\">\n                <h6>Last Updated</h6>\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\n                    ? ''\n                    : formatDistance(\n                        new Date(formatDate(lastUpdated)),\n                        new Date()\n                      ) + ' Ago'}\n                </h6>\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\n                    ? ''\n                    : formatDateAbsolute(lastUpdated)}\n                </h6>\n              </div>\n            </div>\n          </div>\n\n          {states.length > 1 && <Level data={states} />}\n          {fetched && <Minigraph timeseries={timeseries['TT']} />}\n          {fetched && (\n            <Table\n              forwardRef={refs[0]}\n              states={states}\n              summary={false}\n              stateDistrictWiseData={stateDistrictWiseData}\n              onHighlightState={onHighlightState}\n              onHighlightDistrict={onHighlightDistrict}\n            />\n          )}\n        </div>\n\n        <div className=\"home-right\">\n          {fetched && (\n            <React.Fragment>\n              <MapExplorer\n                forwardRef={refs[1]}\n                states={states}\n                stateDistrictWiseData={stateDistrictWiseData}\n                stateTestData={stateTestData}\n                regionHighlighted={regionHighlighted}\n                onMapHighlightChange={onMapHighlightChange}\n              />\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{animationDelay: '2.5s'}}\n                ref={refs[2]}\n              >\n                <h1>Spread Trends</h1>\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>Cumulative</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>Daily</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label>Scale Modes</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">Uniform</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                    }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"trends-state-name\">\n                  <select\n                    onChange={({target}) => {\n                      onHighlightState(JSON.parse(target.value));\n                    }}\n                  >\n                    {states.map((s) => {\n                      return (\n                        <option\n                          key={s.statecode}\n                          value={JSON.stringify(s)}\n                          selected={s.statecode === activeStateCode}\n                        >\n                          {s.state === 'Total' ? 'All States' : s.state}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries[activeStateCode]}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n\n        {/* <div className=\"floating-buttons\">\n          <button\n            className=\"table-nav fadeInUp\"\n            onClick={scrollHandlers[0]}\n            style={{animationDelay: '2.2s'}}\n          >\n            <Icon.Grid />\n          </button>\n          <button\n            className=\"map-nav fadeInUp\"\n            onClick={scrollHandlers[1]}\n            style={{animationDelay: '2.1s'}}\n          >\n            <Icon.MapPin />\n          </button>\n          <button\n            className=\"trends-nav fadeInUp\"\n            onClick={scrollHandlers[2]}\n            style={{animationDelay: '2s'}}\n          >\n            <Icon.TrendingUp />\n          </button>\n        </div> */}\n\n        {/* <div className=\"home-left\">\n        {patients.length > 1 && (\n          <div className=\"patients-summary\">\n            <h1>Recent Cases</h1>\n            <h6>A summary of the latest reported cases</h6>\n            <div className=\"legend\">\n              <div className=\"legend-left\">\n                <div className=\"circle is-female\"></div>\n                <h5 className=\"is-female\">Female</h5>\n                <div className=\"circle is-male\"></div>\n                <h5 className=\"is-male\">Male</h5>\n                <div className=\"circle\"></div>\n                <h5 className=\"\">Unknown</h5>\n              </div>\n            </div>\n            <div className=\"patients-summary-wrapper\">\n              <Patients\n                patients={patients}\n                summary={true}\n                colorMode={'genders'}\n                expand={true}\n              />\n            </div>\n            <button className=\"button\">\n              <Link to=\"/database\">\n                <Icon.Database />\n                <span>View the Patients Database</span>\n              </Link>\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"home-right\"></div>\n    */}\n      </div>\n\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div\n            className=\"updates-header fadeInUp\"\n            style={{animationDelay: '1.5s'}}\n          >\n            <h1>Updates</h1>\n            <h2>{format(new Date(), 'd MMM')}</h2>\n          </div>\n\n          <div className=\"updates fadeInUp\" style={{animationDelay: '1.7s'}}>\n            {activityLog\n              .slice(-5)\n              .reverse()\n              .map(function (activity, index) {\n                activity.update = activity.update.replace(/\\n/g, '<br/>');\n                return (\n                  <div key={index} className=\"update\">\n                    <h5>\n                      {formatDistance(\n                        new Date(activity.timestamp * 1000),\n                        new Date()\n                      ) + ' Ago'}\n                    </h5>\n                    <h4\n                      dangerouslySetInnerHTML={{\n                        __html: activity.update,\n                      }}\n                    ></h4>\n                  </div>\n                );\n              })}\n            <button className=\"button\">\n              <Link to=\"/demographics\">\n                <Icon.Database />\n                <span>Demographic Overview</span>\n              </Link>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"home-right\"></div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar(props) {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  // HTML Properties for each of the links in UI\n  const navLinkProps = (path, animationDelay) => ({\n    className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n    style: {\n      animationDelay: `${animationDelay}s`,\n    },\n  });\n\n  if (window.location.pathname !== '/summary') {\n    return (\n      <div\n        className=\"Navbar\"\n        style={{\n          animationDelay: '0.5s',\n          transition: 'all 0.3s ease-in-out',\n        }}\n      >\n        <Link to=\"/\">\n          <img\n            className=\"fadeInUp logo\"\n            alt=\"India COVID-19 Tracker\"\n            src=\"/icon.png\"\n            style={{\n              animationDelay: '0.0s',\n              transition: 'all 0.3s ease-in-out',\n            }}\n          />\n        </Link>\n\n        <div className=\"navbar-left\">\n          <div className={`navbar-menu ${!menuVisible ? 'hidden' : ''}`}>\n            {props.pages.map((page, i) => {\n              return (\n                <Link\n                  onClick={() => setMenuVisible(false)}\n                  to={page.pageLink}\n                  key={i}\n                >\n                  <span\n                    {...navLinkProps(\n                      page.pageLink,\n                      page.animationDelayForNavbar\n                    )}\n                  >\n                    {page.displayName}\n                  </span>\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"navbar-right\">\n          <div\n            className=\"navbar-toggle\"\n            onClick={() => {\n              setMenuVisible(!menuVisible);\n            }}\n          >\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Links(props) {\n  return (\n    <div className=\"Links\">\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.2s'}}>\n        <h3>HELPLINE NUMBERS [by State]</h3>\n        <a\n          href=\"https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <h3>Ministry of Health and Family Welfare, Gov. of India</h3>\n        <a\n          href=\"https://www.mohfw.gov.in/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.mohfw.gov.in/\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.4s'}}>\n        <h3>WHO : COVID-19 Home Page</h3>\n        <a\n          href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.who.int/emergencies/diseases/novel-coronavirus-2019\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <h3>CDC</h3>\n        <a\n          href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.cdc.gov/coronavirus/2019-ncov/faq.html\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.6s'}}>\n        <h3>Crowdsourced list of Resources & Essentials from across India</h3>\n        <a\n          href=\"https://bit.ly/covid19resourcelist\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://bit.ly/covid19resourcelist\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.7s'}}>\n        <h3>COVID-19 Global Tracker</h3>\n        <a\n          href=\"https://coronavirus.thebaselab.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://coronavirus.thebaselab.com/\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Links;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction FAQ(props) {\n  const [faq, setFaq] = useState([]);\n\n  useEffect(() => {\n    getFAQs();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const getFAQs = () => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setFaq(response.data['faq']);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"FAQ\">\n      {faq.map((faq, index) => {\n        return (\n          <div\n            key={index}\n            className=\"faq fadeInUp\"\n            style={{animationDelay: `${0.5 + index * 0.1}s`}}\n          >\n            <h2 className=\"question\">{faq.question}</h2>\n            <h2\n              className=\"answer\"\n              dangerouslySetInnerHTML={{__html: faq.answer}}\n            ></h2>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FAQ;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport axios from 'axios';\n\nfunction Banner(props) {\n  const [snippets, setSnippets] = useState([]);\n  const [snippet, setSnippet] = useState();\n\n  useEffect(() => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setSnippets(response.data.factoids || []);\n        setSnippet(\n          response.data.factoids[\n            Math.floor(\n              Math.random() * (response.data.factoids.length - 1 - 0) + 0\n            )\n          ] || ''\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const snippetChooser = useCallback(\n    (min, max) => {\n      const index = Math.random() * (max - min) + min;\n      setSnippet(snippets[Math.floor(index)]);\n    },\n    [snippets]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      snippetChooser(0, snippets.length - 1);\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [snippetChooser, snippets]);\n\n  if (window.location.pathname !== '/database') {\n    return (\n      <div\n        onClick={() => snippetChooser(0, snippets.length - 1)}\n        className=\"Banner fadeInUp\"\n        style={{animationDelay: '0.8s'}}\n      >\n        <div className=\"snippet\">{snippet ? snippet.banner : ''} &nbsp;</div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Banner;\n","import React from 'react';\nimport {format} from 'date-fns';\n\nfunction PatientsView(props) {\n  const logs = props.logs;\n\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(props.summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div\n                  key={index}\n                  className={`day ${props.summary ? 'summary' : ''}`}\n                >\n                  {logs[day]\n                    .slice(props.summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={props.applyClass(patient)}\n                          onClick={() => {\n                            props.setModal(true);\n                            props.setPatient(patient);\n                          }}\n                        >\n                          <h3>\n                            {props.expand ? `P${patient.patientnumber}` : ''}\n                          </h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {parse} from 'date-fns';\nimport * as Icon from 'react-feather';\nimport PatientsView from './patientsview';\n\nfunction Patients(props) {\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  // When the user clicks anywhere outside of the modal, close modal\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  useEffect(() => {\n    if (modal) document.body.classList.add('modal-open');\n    else document.body.classList.remove('modal-open'); // to remove modal-open class from body\n  }, [modal]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndexArg) => {\n    if (patientIndexArg === '') return;\n    try {\n      const patientIndex = patientIndexArg.slice(1);\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (patient.patientnumber === patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'India'\n              ? 'is-in'\n              : patient.nationality === 'Myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'Indonesia'\n              ? 'is-id'\n              : patient.nationality === 'United Kingdom'\n              ? 'is-uk'\n              : patient.nationality === 'United States of America'\n              ? 'is-us'\n              : patient.nationality === 'Thailand'\n              ? 'is-th'\n              : patient.nationality === 'Phillipines'\n              ? 'is-ph'\n              : patient.nationality === 'Italy'\n              ? 'is-it'\n              : patient.nationality === 'Canada'\n              ? 'is-ca'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>Date Announced</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>Contracted from</h5>\n              <h3\n                className=\"contracted-from\"\n                onClick={() => {\n                  switchPatient(patient.contractedfromwhichpatientsuspected);\n                }}\n              >\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected\n                  : '?'}\n              </h3>\n\n              <h5>Detected City</h5>\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\n\n              <h5>Detected District</h5>\n              <h3>\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\n              </h3>\n\n              <h5>Detected State</h5>\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\n\n              <h5>Nationality</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>Age</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>Gender</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>State Patient Number</h5>\n              <h3>\n                {patient.statepatientnumber ? patient.statepatientnumber : '?'}\n              </h3>\n\n              <h5>Type of transmission</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>Notes</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>Source 1</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>Source 2</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>Source 3</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n","import React from 'react';\nimport {Parser} from 'json2csv';\nimport * as Icon from 'react-feather';\n\nfunction CSVDownloadLink(props) {\n  if (!props.patients) {\n    return '';\n  }\n  try {\n    const parser = new Parser(Object.keys(props.patients[0]));\n    const csv = parser.parse(props.patients);\n    const data = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);\n    return (\n      <a href={data} download=\"patients.csv\">\n        <code>CSV</code>\n      </a>\n    );\n  } catch (e) {\n    console.log(e);\n    return (\n      <a href=\"/\">\n        <code>CSV</code>\n      </a>\n    );\n  }\n}\n\nfunction DownloadBlock(props) {\n  if (!props.patients) {\n    return '';\n  }\n\n  const dataJSON =\n    'data:text/json;charset=utf-8,' +\n    encodeURIComponent(JSON.stringify(props.patients));\n\n  return (\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\n      <button className=\"button\">\n        <Icon.Download />\n        <CSVDownloadLink patients={props.patients} />\n      </button>\n      <button className=\"button\">\n        <Icon.Download />\n        <a href={dataJSON} download=\"patients.json\">\n          JSON\n        </a>\n      </button>\n    </div>\n  );\n}\n\nexport default DownloadBlock;\n","import React, {useState, useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\nimport axios from 'axios';\nimport {format, parse, subDays} from 'date-fns';\n\nimport Patients from './patients';\nimport DownloadBlock from './downloadblock';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter((p) => {\n    return keys.every((key) => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction PatientDB(props) {\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const [error, setError] = useState('');\n  const {pathname} = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(false);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: format(subDays(new Date(), 1), 'dd/MM/yyyy'),\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffect(() => {\n    async function fetchRawData() {\n      const response = await axios.get(\n        'https://api.covid19india.org/raw_data.json'\n      );\n      if (response.data) {\n        setPatients(response.data.raw_data.reverse());\n        setFetched(true);\n      } else {\n        setError(\"Couldn't fetch patient data. Try again after sometime.\");\n        console.log(response);\n      }\n    }\n\n    if (!fetched) {\n      fetchRawData();\n    }\n  }, [fetched]);\n\n  const handleFilters = (label, value) => {\n    setFilters((f) => {\n      // Create new object (deep copy)\n      const newFilters = {...f};\n      newFilters[label] = value;\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city');\n        // Hide boxes\n        if (value === '') district.style.display = 'none';\n        else district.style.display = 'inline';\n        city.style.display = 'none';\n        // Default to empty selection\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city');\n        // Hide box\n        if (value === '') city.style.display = 'none';\n        else city.style.display = 'inline';\n        // Default to empty selection\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    setFilteredPatients(filterByObject(patients, filters));\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map((p) => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  return (\n    <div className=\"PatientsDB\">\n      {error ? <div className=\"alert alert-danger\">{error}</div> : ''}\n\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <div className=\"filters-left\">\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.3s'}}\n              id=\"state\"\n              onChange={(event) => {\n                handleFilters('detectedstate', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select State\n              </option>\n              {getSortedValues(patients, 'detectedstate').map(\n                (state, index) => {\n                  return (\n                    <option key={index} value={state}>\n                      {state === '' ? 'All' : state}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('detecteddistrict', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select District\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'detecteddistrict'\n              ).map((district, index) => {\n                return (\n                  <option key={index} value={district}>\n                    {district === '' ? 'All' : district}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select Day\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'dateannounced'\n              ).map((date, index) => {\n                return (\n                  <option key={index} value={date}>\n                    {date === ''\n                      ? 'All'\n                      : format(\n                          parse(date, 'dd/MM/yyyy', new Date()),\n                          'dd MMM, yyyy'\n                        )}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          {/* <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\n                (date, index) => {\n                  return (\n                    <option key={index} value={date}>\n                      {date}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>*/}\n        </div>\n\n        <div className=\"legend\">\n          {colorMode === 'genders' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-female\"></div>\n              <h5 className=\"is-female\">Female</h5>\n              <div className=\"circle is-male\"></div>\n              <h5 className=\"is-male\">Male</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">Unknown</h5>\n            </div>\n          )}\n\n          {colorMode === 'transmission' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-local\"></div>\n              <h5 className=\"is-local\">Local</h5>\n              <div className=\"circle is-imported\"></div>\n              <h5 className=\"is-imported\">Imported</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">TBD</h5>\n            </div>\n          )}\n\n          {colorMode === 'nationality' && (\n            <div className=\"legend-left nationality\">\n              <div className=\"circle is-in\"></div>\n              <h5 className=\"is-in\">In</h5>\n              <div className=\"circle is-uk\"></div>\n              <h5 className=\"is-uk\">Uk</h5>\n              <div className=\"circle is-us\"></div>\n              <h5 className=\"is-us\">Us</h5>\n              <div className=\"circle is-th\"></div>\n              <h5 className=\"is-thailand\">Th</h5>\n              <div className=\"circle is-ph\"></div>\n              <h5 className=\"is-ph\">Ph</h5>\n              <div className=\"circle is-it\"></div>\n              <h5 className=\"is-it\">It</h5>\n              <div className=\"circle is-ca\"></div>\n              <h5 className=\"is-ca\">Ca</h5>\n              <div className=\"circle is-id\"></div>\n              <h5 className=\"is-id\">Id</h5>\n              <div className=\"circle is-mm\"></div>\n              <h5 className=\"is-mm\">Mm</h5>\n            </div>\n          )}\n\n          <div className={`select ${colorMode}`}>\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                setColorMode(event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Color modes\n              </option>\n              <option value=\"genders\">Genders</option>\n              <option value=\"transmission\">Transmission</option>\n              <option value=\"nationality\">Nationality</option>\n              {/* <option value=\"age\">Age</option>*/}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <div>\n          <h1>Demographics</h1>\n          {/* <h3>No. of Patients: {patients.length}</h3>*/}\n\n          <div className=\"deep-dive\">\n            <h5>Expand</h5>\n            <input\n              type=\"checkbox\"\n              checked={scaleMode}\n              onChange={(event) => {\n                setScaleMode(!scaleMode);\n              }}\n              className=\"switch\"\n            />\n          </div>\n        </div>\n        <h6 className=\"disclaimer\">\n          Some of the data provided might be missing/unknown as the details have\n          not been shared by the state/central governments.\n        </h6>\n      </div>\n\n      <div className=\"reminder fadeInUp\" style={{animationDelay: '1s'}}>\n        <p>\n          It is important that we do not think of these as just tiny boxes,\n          numbers, or just another part of statistics - among these are our\n          neighbors, our teachers, our healthcare workers, our supermarket\n          vendors, our friends, our co-workers, our children or our\n          grandparents.\n          <br />\n          <br />\n          Among these are our people.\n        </p>\n      </div>\n\n      <div className=\"patientdb-wrapper\">\n        <Patients\n          patients={filteredPatients}\n          colorMode={colorMode}\n          expand={scaleMode}\n        />\n      </div>\n      <DownloadBlock patients={patients} />\n    </div>\n  );\n}\n\nexport default PatientDB;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\n\nfunction GenderChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  let male = 0;\n  let female = 0;\n  let unknown = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === 'M') {\n      male++;\n    } else if (patient.gender === 'F') {\n      female++;\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female, unknown],\n        backgroundColor: ['blue', 'pink', 'grey'],\n        label: 'Hola',\n      },\n    ],\n    labels: ['Male', 'Female', 'Awaiting Details'],\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      position: 'nearest',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n}\n\nexport default GenderChart;\n","import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\n\nfunction AgeChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  const ages = Array(10).fill(0);\n  let unknown = 0;\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      for (let i = 0; i < 10; i++) {\n        if (age > i * 10 && age <= (i + 1) * 10) {\n          ages[i]++;\n        }\n      }\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    labels: [\n      '0-10',\n      '11-20',\n      '21-30',\n      '31-40',\n      '41-50',\n      '51-60',\n      '61-70',\n      '71-80',\n      '81-90',\n      '91-100',\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: 'Cases',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const chartOptions = {\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 0,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n}\n\nexport default AgeChart;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\n\nfunction NationalityChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const nationality = {};\n  let unknown = 0;\n\n  props.data.forEach((patient) => {\n    if (!patient.nationality) {\n      unknown++;\n      return;\n    }\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\n      nationality[patient.nationality.toLowerCase()] = 0;\n    }\n    nationality[patient.nationality.toLowerCase()]++;\n  });\n\n  // delete nationality.india;\n  const data = [];\n  const labels = [];\n\n  Object.keys(nationality).forEach((country) => {\n    if (country) {\n      labels.push(country.toUpperCase());\n      data.push(nationality[country]);\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#ff7272',\n          '#ffb385',\n          '#fae7cb',\n          '#ffd31d',\n          '#00a8cc',\n          '#005082',\n          '#000839',\n          '#ffa41b',\n          '#f1e7b6',\n          '#400082',\n          '#fe346e',\n          '#5a3f11',\n          '#9c5518',\n          '#f67575',\n          '#d4f8e8',\n          '#1eb2a6',\n        ],\n      },\n    ],\n    labels: labels,\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n}\n\nexport default NationalityChart;\n","import React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\nimport {getStateName} from '../../utils/common-functions';\nfunction AllStatesChart(props) {\n  const dates = [];\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD MMM'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\n          : 0;\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n      statesData.get(key).push(previousValue + currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      borderWidth: 1.5,\n      data: statesData.get(key),\n      borderCapStyle: 'round',\n      pointBackgroundColor: colors[index],\n      label: getStateName(key),\n      borderColor: colors[index],\n      pointHoverRadius: 0.5,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: datasets,\n  };\n\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default AllStatesChart;\n","import React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\n\nfunction TotalConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      dates.push(moment(data.date.trim(), 'DD MMM'));\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#ff073a',\n        label: 'Confirmed',\n        borderColor: '#ff073a',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#28a745',\n        label: 'Recovered',\n        borderColor: '#28a745',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#6c757d',\n        label: 'Deceased',\n        borderColor: '#6c757d',\n        pointHoverRadius: 2,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    events: [\n      'click',\n      'mousemove',\n      'mouseout',\n      'touchstart',\n      'touchmove',\n      'touchend',\n    ],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0.1,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: 'logarithmic',\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return '10000';\n            if (value === 2000) return '2500';\n            if (value === 500) return '500';\n            if (value === 100) return '100';\n            if (value === 20) return '25';\n            if (value === 5) return '5';\n            if (value === 0) return '0';\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: 'Total Cases',\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalConfirmedChart;\n","import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\n\nfunction DailyConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      dates.push(moment(data.date.trim(), 'DD MMM').format('DD MMM'));\n      confirmed.push(\n        data.dailyconfirmed - data.dailyrecovered - data.dailydeceased\n      );\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n\n  const barDataSet = {\n    labels: dates,\n    datasets: [\n      {\n        data: recovered,\n        label: 'Recovered',\n        backgroundColor: '#28a745',\n      },\n      {\n        data: deceased,\n        label: 'Deceased',\n        backgroundColor: '#6c757d',\n      },\n      {\n        data: confirmed,\n        label: 'Active',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Bar data={barDataSet} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyConfirmedChart;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport GenderChart from './Charts/genderchart';\nimport AgeChart from './Charts/agechart';\nimport NationalityChart from './Charts/nationalitychart';\nimport AllStatesChart from './Charts/allstates';\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\n\nfunction DeepDive(props) {\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        rawDataResponse,\n        stateDailyResponse,\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/raw_data.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n      ]);\n      setTimeseries(response.data.cases_time_series);\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <section className=\"cards\">\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <TotalConfirmedChart\n            title=\"India - Total Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <DailyConfirmedChart\n            title=\"India - Daily Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AllStatesChart\n            title=\"States - Total Cases\"\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GenderChart title=\"Patient Gender\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AgeChart title=\"Patient Age\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <NationalityChart title=\"Patient Nationality\" data={rawData} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DeepDive;\n","import React, {useState, useEffect, useRef} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useTable} from 'react-table';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Autosuggest from 'react-autosuggest';\nimport TextField from '@material-ui/core/TextField';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nconst usePanelSummaryStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  root: {\n    backgroundColor: '#201aa220',\n    height: '4rem',\n  },\n}));\nconst usePanelDetailsStyles = makeStyles((theme) => ({\n  root: {\n    padding: '0px 5px 0px 24px',\n  },\n}));\nconst useListStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n}));\n\nconst usePanelStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginBottom: '0.2rem',\n  },\n}));\nconst useItemTextStyles = makeStyles((theme) => ({\n  primary: {\n    fontFamily: 'Archia',\n    fontWeight: 500,\n    fontStyle: 'normal',\n    fontSize: '13px',\n    fontTransform: 'uppercase',\n  },\n  secondary: {\n    fontFamily: 'Archia',\n    fontWeight: 400,\n    fontStyle: 'normal',\n    fontSize: '12px',\n    width: '100%',\n    wordWrap: 'break-word',\n    // fontTransform: 'uppercase'\n  },\n}));\n\nconst getNumbersLink = (initialValue) => {\n  // const phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n  const numbf = initialValue.split(',');\n  // console.log('numbers are', '' + numbf.length);\n\n  const numbg = /^\\d{5,12}$/g;\n  const numberList = numbf.map((iv, i) => {\n    iv = iv.trim();\n    // console.log('numbr ', '' + iv);\n    return iv.replace(numbg, '<a href=\"tel:$&\">$&</a>');\n  });\n  // console.log('numberList ', '' + numberList);\n  return {numberList};\n};\nconst getFormattedLinkForAccordion = (initialValue) => {\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n  const noLetters = /^[\\d,\\s]+$/;\n  let s3 = '';\n  if (initialValue.match(noLetters) != null) {\n    const formatedLink = getNumbersLink(initialValue);\n    const links = JSON.parse(JSON.stringify(formatedLink));\n    // console.log('success val', ' --' + JSON.stringify(links.numberList));\n    s3 = String(links.numberList).replace(/,/g, '<br>');\n  } else {\n    const s1 = initialValue.replace(\n      reurl1,\n      '<a href=\"$1\" target=\"_blank\">Link</a>'\n    );\n    const s2 = s1.replace(\n      reinsta,\n      '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n    );\n    s3 = s2.replace(\n      refb,\n      '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n    );\n  }\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: s3,\n      }}\n    ></div>\n  );\n};\n\nconst getFormattedLink = (initialValue) => {\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n  const noLetters = /^[\\d,\\s]+$/;\n  let s3 = '';\n  if (initialValue.match(noLetters) != null) {\n    const formatedLink = getNumbersLink(initialValue);\n    const links = JSON.parse(JSON.stringify(formatedLink));\n    // console.log('success val', ' --' + JSON.stringify(links.numberList));\n    s3 = String(links.numberList).replace(/,/g, '<br>');\n  } else {\n    const s1 = initialValue.replace(\n      reurl1,\n      '<a href=\"$1\" target=\"_blank\">Link</a>'\n    );\n    const s2 = s1.replace(\n      reinsta,\n      '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n    );\n    s3 = s2.replace(\n      refb,\n      '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n    );\n  }\n  return s3;\n};\nconst rendercell = (celli) => {\n  const value = celli.cell.value;\n  console.log(celli);\n  let renderedvalue = '';\n  const link = celli.row.allCells[5].value.split(',')[0];\n\n  if (celli.column.id === 'contact') renderedvalue = getFormattedLink(value);\n  else if (celli.column.id === 'phonenumber') {\n    // renderedvalue = String(JSON.parse(JSON.stringify(getNumbersLink(value))).numberList).replace(/,/g, '<br>');\n    renderedvalue = getFormattedLink(value);\n  } else if (celli.column.id === 'nameoftheorganisation') {\n    if (link !== '')\n      renderedvalue = `<a href=${link} target=\"_blank\">${value}</a>`;\n    else renderedvalue = value;\n  } else renderedvalue = value;\n\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: renderedvalue,\n      }}\n    ></div>\n  );\n};\nconst FormattedCell = ({value: initialValue, editable}) => {\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n\n  // If the initialValue is changed externall, sync it up with our state\n  React.useEffect(() => {\n    const noLetters = /^[\\d,\\s]+$/;\n    if (initialValue.match(noLetters) != null) {\n      const formatedLink = getNumbersLink(initialValue);\n      const links = JSON.parse(JSON.stringify(formatedLink));\n      setValue(String(links.numberList).replace(/,/g, '<br>'));\n    } else {\n      const s1 = initialValue.replace(\n        reurl1,\n        '<a href=\"$1\" target=\"_blank\">Link</a>'\n      );\n      const s2 = s1.replace(\n        reinsta,\n        '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n      );\n      const s3 = s2.replace(\n        refb,\n        '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n      );\n      setValue(s3);\n    }\n  }, [initialValue, reurl1, refb, reinsta]);\n\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: value,\n      }}\n    ></div>\n  );\n};\n\n// searchbar stuff\n\nconst getSuggestions = (value, resources) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  // console.log(resources);\n  return inputLength === 0\n    ? resources\n    : resources.filter(\n        (resource) =>\n          resource.category.toLowerCase().includes(inputValue.toLowerCase()) ||\n          resource.descriptionandorserviceprovided\n            .toLowerCase()\n            .includes(inputValue.toLowerCase()) ||\n          resource.nameoftheorganisation\n            .toLowerCase()\n            .includes(inputValue.toLowerCase())\n      );\n};\n\nconst getSuggestionValue = (suggestion) => suggestion.nameoftheorganisation;\n\nconst renderSuggestion = (suggestion) => (\n  <div>{suggestion.nameoftheorganisation}</div>\n);\n\nfunction ResourceTable({\n  columns,\n  data,\n  isDesktop,\n  totalCount,\n  onScrollUpdate,\n  city,\n  category,\n  indianstate,\n}) {\n  const classesPannelSummary = usePanelSummaryStyles();\n  const classesPanel = usePanelStyles();\n  const classesListItemText = useItemTextStyles();\n  const classesPanelDetails = usePanelDetailsStyles();\n  const classesList = useListStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const defaultColumn = React.useMemo(\n    () => ({\n      Cell: FormattedCell,\n    }),\n    []\n  );\n  const handleExpansionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const [searchValue, setSearchValue] = useState('');\n  const [suggestions, setSuggestions] = useState(data);\n\n  const prevIndianState = useRef('');\n  const prevCity = useRef('');\n  const prevCategory = useRef('');\n\n  useEffect(() => {\n    if (\n      prevCategory.current === category &&\n      prevIndianState.current === indianstate &&\n      prevCity.current === city\n    ) {\n      setSuggestions(getSuggestions(searchValue, data));\n    } else {\n      setSuggestions(data);\n      setSearchValue('');\n      prevCategory.current = category;\n      prevIndianState.current = indianstate;\n      prevCity.current = city;\n    }\n  }, [searchValue, data, category, indianstate, city]);\n\n  const onChange = (event, {newValue}) => {\n    setSearchValue(newValue);\n  };\n\n  const onSuggestionsFetchRequested = ({value}) => {\n    setSuggestions(getSuggestions(value, data));\n  };\n\n  const inputProps = {\n    placeholder: '',\n    value: searchValue,\n    onChange: onChange,\n  };\n\n  const renderInputComponent = (inputProps) => (\n    <TextField\n      id=\"outlined-number\"\n      label=\"Search keyword\"\n      fullWidth={true}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      style={{\n        width: '100%',\n      }}\n      variant=\"outlined\"\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchOutlinedIcon style={{fontSize: '0.7rem'}} />\n          </InputAdornment>\n        ),\n      }}\n      {...inputProps}\n    />\n  );\n\n  const parseText = function (text, limit) {\n    if (text.length > limit) {\n      for (let i = limit; i > 0; i--) {\n        if (\n          text.charAt(i) === ' ' &&\n          (text.charAt(i - 1) !== ',' ||\n            text.charAt(i - 1) !== '.' ||\n            text.charAt(i - 1) !== ';')\n        ) {\n          return text.substring(0, i) + '...';\n        }\n      }\n      return text.substring(0, limit) + '...';\n    } else return text;\n  };\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n  } = useTable({\n    columns,\n    data: suggestions,\n    defaultColumn,\n    initialState: {hiddenColumns: 'contact'},\n  });\n\n  // Render the UI for your table\n  if (isDesktop === true)\n    return (\n      <>\n        <div className=\"searchbar\">\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n            alwaysRenderSuggestions={true}\n            renderInputComponent={renderInputComponent}\n          />\n        </div>\n        <div className=\"tableandcontrols\">\n          <InfiniteScroll\n            dataLength={data.length}\n            hasMore={data.length < totalCount}\n            next={onScrollUpdate}\n            loader={<h4>Fetching more information, please wait.</h4>}\n          >\n            <table {...getTableProps()}>\n              <thead>\n                {headerGroups.map((headerGroup) => (\n                  <tr\n                    key={headerGroup.id}\n                    {...headerGroup.getHeaderGroupProps()}\n                  >\n                    {headerGroup.headers.map((column, i) => (\n                      <th\n                        key={column.id}\n                        {...column.getHeaderProps()}\n                        className={i === 3 ? 'descriptionCol sticky' : 'sticky'}\n                      >\n                        {column.render('Header')}\n                      </th>\n                    ))}\n                  </tr>\n                ))}\n              </thead>\n              <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                  prepareRow(row);\n                  return (\n                    <tr key={row.id} {...row.getRowProps()}>\n                      {row.cells.map((cell, cellindex) => {\n                        return (\n                          <td key={cellindex} {...cell.getCellProps()}>\n                            {cell.render(rendercell)}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </InfiniteScroll>\n        </div>\n      </>\n    );\n  else\n    return (\n      <>\n        <div className=\"searchbar\">\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n            alwaysRenderSuggestions={true}\n            renderInputComponent={renderInputComponent}\n          />\n        </div>\n        <div\n          className=\"resourcesaccordion\"\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n            alignItems: 'center',\n          }}\n        >\n          <InfiniteScroll\n            dataLength={data.length}\n            hasMore={data.length < totalCount}\n            next={onScrollUpdate}\n            loader={<h4>Fetching more information, please wait.</h4>}\n            style={{width: '100%', maxWidth: '335px', overflow: 'hidden'}} // for large texts\n          >\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <ExpansionPanel\n                  key={row.id}\n                  classes={{root: classesPanel.root}}\n                  expanded={expanded === `panel-${i}`}\n                  onChange={handleExpansionChange(`panel-${i}`)}\n                >\n                  <ExpansionPanelSummary\n                    classes={{\n                      content: classesPannelSummary.content,\n                      root: classesPannelSummary.root,\n                    }}\n                  >\n                    {/* <div className=\"expanelheading\"\n                                 style={{display: 'flex',\n                                         flexDirection: 'row',\n                                         justifyContent: 'space-between',\n                                         backgroundColor: 'blue'}}> */}\n                    <div\n                      className=\"orgname\"\n                      style={{\n                        maxWidth: '10rem',\n                        textAlign: 'start',\n                        color: '#201aa2dd',\n                      }}\n                    >\n                      <h6>\n                        {parseText(row.values['nameoftheorganisation'], 50)}\n                      </h6>\n                    </div>\n                    <div\n                      className=\"orgcategory\"\n                      style={{maxWidth: '10.9rem', textAlign: 'end'}}\n                    >\n                      <h6>{row.values['category']}</h6>\n                    </div>\n                    {/* </div> */}\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails\n                    classes={{root: classesPanelDetails.root}}\n                  >\n                    <List\n                      disablePadding={true}\n                      dense={true}\n                      classes={{root: classesList.root}}\n                    >\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Organisation Name\"\n                          secondary={row.values['nameoftheorganisation']}\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Location\"\n                          secondary={row.values['city']}\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Description\"\n                          secondary={\n                            row.values['descriptionandorserviceprovided']\n                          }\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Service\"\n                          secondary={row.values['category']}\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Phonenumber\"\n                          secondary={getFormattedLinkForAccordion(\n                            row.values['phonenumber']\n                          )}\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Website\"\n                          secondary={getFormattedLinkForAccordion(\n                            row.values['contact']\n                          )}\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                    </List>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      </>\n    );\n}\n\nexport default ResourceTable;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport ResourceTable from './resourcetable';\nimport axios from 'axios';\nimport FormControl from '@material-ui/core/FormControl';\nimport Popover from '@material-ui/core/Popover';\nimport Select from '@material-ui/core/Select';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationOutlinedIcon from '@material-ui/icons/NavigationOutlined';\n\nexport const useFormControlStyles = makeStyles((isDesktop) => {\n  if (isDesktop === true)\n    return {\n      root: {\n        margin: '1rem',\n        flexGrow: '1',\n      },\n    };\n  else\n    return {\n      root: {\n        margin: '0.4rem',\n        flexGrow: '1',\n        width: '100%',\n      },\n    };\n});\nexport const useInputLabelStyles = makeStyles(() => ({\n  root: {\n    fontFamily: 'archia',\n    fontSize: '11px !important',\n    fontWeight: 600,\n    textTransform: 'uppercase',\n  },\n}));\n\nexport const useMenuItemStyles = makeStyles(() => ({\n  root: {\n    fontFamily: 'archia',\n    fontSize: '11px !important',\n    fontWeight: 600,\n    textTransform: 'uppercase',\n  },\n}));\nexport const usePopOverStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: '#201aa220',\n    zIndex: '1000',\n  },\n}));\nexport const useTextInputStyles = makeStyles(() => ({\n  root: {\n    height: '0.5rem',\n  },\n}));\nfunction Resources(props) {\n  const [data, setData] = useState([]);\n  const [partData, setPartData] = useState([]);\n  const [fetched, setFetched] = useState(false);\n  const [city, setCity] = useState('all');\n  const [category, setCategory] = useState('all');\n  const [indianstate, setIndianState] = useState('all');\n  const [resourcedict, setResourceDict] = useState({});\n  const [showTable, setShowTable] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n  const classesFormControl = useFormControlStyles();\n  const classesInputLabel = useInputLabelStyles();\n  const classesMenuItem = useMenuItemStyles();\n  const classesPopOver = usePopOverStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  useEffect(() => {\n    if (fetched === false) {\n      getResources();\n    }\n  }, [fetched, data, resourcedict]);\n  const checkForResizeEvent = useCallback((event) => {\n    if (window.innerWidth > 639) setIsDesktop(true);\n    else setIsDesktop(false);\n    // console.log(isDesktop);\n  }, []);\n\n  useEffect(() => {\n    if (window.innerWidth > 639) setIsDesktop(true);\n    else setIsDesktop(false);\n    window.addEventListener('resize', checkForResizeEvent);\n    return () => {\n      window.removeEventListener('resize', checkForResizeEvent);\n    };\n  }, [isDesktop, checkForResizeEvent]);\n\n  const getResources = async () => {\n    try {\n      const [response] = await Promise.all([\n        axios.get('https://api.covid19india.org/resources/resources.json'),\n      ]);\n      // console.log(response)\n      // console.log(\"Column names are\")\n      // console.log(columns)\n      // setData(response.data.resources);\n      const hashmap = {};\n      response.data.resources.forEach((x) => {\n        // console.log(x)\n        if (typeof hashmap[x['state']] === 'undefined')\n          hashmap[x['state']] = {};\n        if (typeof hashmap[x['state']][x['city']] === 'undefined')\n          hashmap[x['state']][x['city']] = {};\n        if (\n          typeof hashmap[x['state']][x['city']][x['category']] === 'undefined'\n        )\n          hashmap[x['state']][x['city']][x['category']] = [];\n        if (Array.isArray(hashmap[x['state']][x['city']][x['category']]))\n          hashmap[x['state']][x['city']][x['category']].push(x);\n      });\n\n      setResourceDict(hashmap);\n      // setIndianState(Object.keys()[0]);\n\n      setFetched(true);\n      // console.log(resourcedict);\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  const handleDisclaimerClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleDisclaimerClose = () => {\n    setAnchorEl(null);\n  };\n\n  const isDisclaimerOpen = Boolean(anchorEl);\n  const id = isDisclaimerOpen ? 'simple-popover' : undefined;\n  function topFunction() {\n    document.body.scrollTop = 0; // For Safari\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n  }\n\n  const memocols = React.useMemo(\n    () => [\n      {\n        Header: 'City',\n        accessor: 'city',\n      },\n      {\n        Header: 'Category',\n        accessor: 'category',\n      },\n      {\n        Header: 'Organisation',\n        accessor: 'nameoftheorganisation',\n      },\n      {\n        Header: 'Description',\n        accessor: 'descriptionandorserviceprovided',\n      },\n      {\n        Header: 'Phone',\n        accessor: 'phonenumber',\n      },\n      {\n        Header: 'Source',\n        accessor: 'contact',\n        isVisible: false,\n      },\n    ],\n    []\n  );\n  // const memodata = React.useMemo(() => data, [data])\n\n  const getCityOptions = function () {\n    if (indianstate) {\n      if (indianstate === 'all') return [];\n      else {\n        return Object.keys(resourcedict[indianstate])\n          .sort()\n          .map((x) => (\n            <option\n              key={x.id}\n              value={x}\n              style={{\n                fontFamily: 'archia',\n                fontSize: '11px !important',\n                fontWeight: 600,\n                textTransform: 'uppercase',\n              }}\n            >\n              {x}\n            </option>\n          ));\n      }\n    } else return [];\n    // return getCityList().map((x) => <option value={x}>{x}</option>)\n  };\n  const getIndianStateOptions = function () {\n    // let defaultOption = ['Please select']\n    return Object.keys(resourcedict)\n      .sort()\n      .map((x) => (\n        <option\n          key={x.id}\n          value={x}\n          style={{\n            fontFamily: 'archia',\n            fontSize: '11px !important',\n            fontWeight: 600,\n            textTransform: 'uppercase',\n          }}\n        >\n          {x}\n        </option>\n      ));\n  };\n  const getCategoryOptions = function () {\n    if (indianstate && city) {\n      if (indianstate === 'all') {\n        const array = [];\n        Object.values(resourcedict).forEach((state) => {\n          Object.values(state).forEach((citydata) => {\n            Object.keys(citydata).forEach((x) => {\n              if (array.indexOf(x) === -1) array.push(x);\n            });\n          });\n        });\n        return array.map((x) => (\n          <option\n            key={x.id}\n            value={x}\n            style={{\n              fontFamily: 'archia',\n              fontSize: '11px !important',\n              fontWeight: 600,\n              textTransform: 'uppercase',\n            }}\n          >\n            {x}\n          </option>\n        ));\n      } else {\n        if (city === 'all') {\n          const array = [];\n          Object.values(resourcedict[indianstate]).forEach((citydata) => {\n            Object.keys(citydata).forEach((x) => {\n              if (array.indexOf(x) === -1) array.push(x);\n            });\n          });\n          return array.map((x) => (\n            <option\n              key={x.id}\n              value={x}\n              style={{\n                fontFamily: 'archia',\n                fontSize: '11px !important',\n                fontWeight: 600,\n                textTransform: 'uppercase',\n              }}\n            >\n              {x}\n            </option>\n          ));\n        } else {\n          return Object.keys(resourcedict[indianstate][city])\n            .sort()\n            .map((x) => (\n              <option\n                key={x.id}\n                value={x}\n                style={{\n                  fontFamily: 'archia',\n                  fontSize: '11px !important',\n                  fontWeight: 600,\n                  textTransform: 'uppercase',\n                }}\n              >\n                {x}\n              </option>\n            ));\n        }\n      }\n    } else return [];\n  };\n\n  const filterTable = function () {\n    // console.log('Search Button Pressed');\n    // console.log(`Filters are: ${indianstate} ---> ${city} ----> ${category}`);\n    let a = [];\n    if (category === 'all') {\n      // console.log(\"All category selected\");\n      if (city === 'all') {\n        if (indianstate === 'all') {\n          Object.values(resourcedict).forEach((state) => {\n            Object.values(state).forEach((citydata) => {\n              Object.values(citydata).forEach((category) => {\n                category.forEach((x) => a.push(x));\n              });\n            });\n          });\n        } else {\n          Object.values(resourcedict[indianstate]).forEach((citydata) => {\n            Object.values(citydata).forEach((category) => {\n              category.forEach((x) => a.push(x));\n            });\n          });\n        }\n      } else {\n        Object.values(resourcedict[indianstate][city]).forEach((x) => {\n          x.forEach((y) => a.push(y));\n        });\n      }\n    } else {\n      // console.log(`Category chosen ${category}`);\n      // a = resourcedict[indianstate][city][category];\n\n      if (indianstate === 'all' && city === 'all') {\n        Object.values(resourcedict).forEach((state) => {\n          Object.values(state).forEach((citydata) => {\n            Object.values(citydata).forEach((categorydata) => {\n              categorydata.forEach((x) => {\n                if (x.category === category) a.push(x);\n              });\n            });\n          });\n        });\n      } else if (indianstate !== 'all' && city === 'all') {\n        Object.values(resourcedict[indianstate]).forEach((citydata) => {\n          if (category in citydata) {\n            citydata[category].forEach((x) => {\n              a.push(x);\n            });\n          }\n        });\n      } else {\n        a = resourcedict[indianstate][city][category];\n      }\n    }\n    try {\n      if ('PAN India' in resourcedict) {\n        resourcedict['PAN India']['Multiple']['CoVID-19 Testing Lab'].forEach(\n          (element) => {\n            a.push(element);\n          }\n        );\n      }\n    } catch (err) {\n      // console.log('No PAN India row found');\n    }\n    setData(a);\n    setPartData(a.slice(0, 30));\n    // console.log(resourcedict[indianstate][city][category]);\n    // console.log(data);\n    setShowTable(true);\n  };\n\n  const changeIndianState = function (changedstateevent) {\n    setIndianState(changedstateevent.target.value);\n    // setCity(\n    //   Object.keys(resourcedict[changedstateevent.target.value]).sort()[0]\n    // );\n    if (changedstateevent.target.value === '') {\n      setCity('');\n      document.getElementById('cityselect1').selectedIndex = 0;\n      setCategory('');\n      document.getElementById('categoryselect').selectedIndex = 0;\n    } else {\n      setCity('all');\n      document.getElementById('cityselect1').selectedIndex = 1;\n      setCategory('all');\n      document.getElementById('categoryselect').selectedIndex = 1;\n    }\n  };\n  const changeCity = function (changedcityevent) {\n    setCity(changedcityevent.target.value);\n    setCategory('all');\n    document.getElementById('categoryselect').selectedIndex = 1;\n  };\n  const changeCategory = function (changedcategoryevent) {\n    setCategory(changedcategoryevent.target.value);\n    // console.log(changedcategoryevent.target.value);\n  };\n  const appendData = function () {\n    const tempArr = partData.concat(\n      data.slice(partData.length, partData.length + 30)\n    );\n    setPartData(tempArr);\n  };\n\n  const openSharingLink = function (message) {\n    const shareUri = `https://www.addtoany.com/share#url=${encodeURI(\n      'https://www.covid19india.org/essentials'\n    )}&title=${encodeURI(message)}`;\n\n    const h = 500;\n    const w = 500;\n    const left = window.screen.width / 2 - w / 2;\n    const top = window.screen.height / 2 - h / 2;\n    return window.open(\n      shareUri,\n\n      document.title,\n      'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' +\n        w +\n        ', height=' +\n        h +\n        ', top=' +\n        top +\n        ', left=' +\n        left\n    );\n  };\n\n  const openSharingTray = function () {\n    const message =\n      'Discover nearest coronavirus support and essential service providers such as testing lab centres, accommodation shelters and vegetable vendors at ';\n    if (navigator.share !== undefined) {\n      navigator\n        .share({\n          title: document.title,\n          text: message,\n          url: 'https://www.covid19india.org/essentials',\n        })\n        .then()\n        .catch((error) => console.log(error));\n    } else {\n      openSharingLink(message);\n    }\n  };\n  return (\n    <div className=\"Resources\">\n      <div className=\"filtersection\">\n        <div className=\"filtertitle\">\n          <h3>Service Before Self</h3>\n        </div>\n        {!isDesktop && (\n          <React.Fragment>\n            <div\n              className=\"disclaimercontainer\"\n              style={{\n                display: 'flex',\n                flexDirection: 'row-reverse',\n                width: '100%',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              <div\n                className=\"button is-purple mobile-disclaimer-button\"\n                style={{\n                  margin: '0.2rem',\n                  padding: '0.5rem',\n                  alignItems: 'center',\n                }}\n                onClick={handleDisclaimerClick}\n              >\n                Disclaimer\n                <ErrorOutlineOutlinedIcon\n                  htmlColor=\"#6c757d\"\n                  fontSize=\"0.1rem\"\n                />\n              </div>\n              <Popover\n                id={id}\n                open={isDisclaimerOpen}\n                classes={{root: classesPopOver.root}}\n                anchorEl={anchorEl}\n                onClose={handleDisclaimerClose}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                <h6\n                  style={{\n                    paddingLeft: '0.5rem',\n                    color: '#343a40',\n                    margin: '0.3rem 0rem',\n                  }}\n                >\n                  <p>\n                    We are a community sourced listing platform and are not\n                    associated with any of the organisations listed below.\n                  </p>\n                  <p>\n                    Although we verify all our listings, we request you to\n                    follow all the guidelines and take necessary precautions.\n                  </p>\n                  <p>\n                    We encourage you to report any error or suspicious activity\n                    so we can take immediate action.\n                  </p>\n                </h6>\n              </Popover>\n              <a\n                href=\"https://docs.google.com/forms/d/e/1FAIpQLSfquevp7_rdgdEoDgTdimWwTXO3B9TjFEAm3DbrMDXxCiuwuA/viewform\"\n                className=\"button add-entry is-purple\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{margin: '0.2rem 0.2rem', padding: '0.5rem 0.5rem'}}\n              >\n                <span>Add</span>\n              </a>\n              <a\n                href=\"https://forms.gle/AG5hmYxyhto3NjU46\"\n                className=\"button add-entry is-purple\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{margin: '0.2rem 0.2rem', padding: '0.5rem 0.5rem'}}\n              >\n                <span>Feedback</span>\n              </a>\n            </div>\n            <div className=\"resourcefilters\">\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  State/UT\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"stateselect\"\n                  value={indianstate}\n                  onChange={changeIndianState}\n                  defaultValue=\"all\"\n                  label=\"State/UT\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All states\n                  </option>\n                  {getIndianStateOptions()}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  City\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"cityselect1\"\n                  value={city}\n                  onChange={changeCity}\n                  defaultValue=\"all\"\n                  label=\"City\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All Cities\n                  </option>\n                  {getCityOptions()}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  Services\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"categoryselect\"\n                  value={category}\n                  onChange={changeCategory}\n                  defaultValue=\"all\"\n                  label=\"Services\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All Categories\n                  </option>\n                  {getCategoryOptions()}\n                </Select>\n              </FormControl>\n\n              <div\n                className=\"search-share\"\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  width: '100%',\n                }}\n              >\n                <button\n                  className=\"button is-purple\"\n                  disabled={!indianstate}\n                  onClick={filterTable}\n                  style={{\n                    margin: '0.2rem 0.2rem',\n                    padding: '0.5rem 0.5rem',\n                    width: '50%',\n                    justifyContent: 'center',\n                  }}\n                >\n                  Search\n                </button>\n                <button\n                  onClick={openSharingTray}\n                  className=\"button add-entry is-purple\"\n                  style={{\n                    margin: '0.2rem 0.2rem',\n                    padding: '0.5rem 0.5rem',\n                    width: '50%',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <span>Share</span>\n                </button>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n        {isDesktop && (\n          <React.Fragment>\n            <div\n              className=\"disclaimercontainer\"\n              style={{\n                display: 'flex',\n                flexDirection: 'row-reverse',\n                width: '100%',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              <div\n                className=\"button disclaimer-button\"\n                style={{\n                  margin: '0rem',\n                  padding: '0.3rem',\n                  alignItems: 'center',\n                  justifyContent: 'space-around',\n                }}\n                onClick={handleDisclaimerClick}\n              >\n                Disclaimer\n                <ErrorOutlineOutlinedIcon\n                  htmlColor=\"#6c757d\"\n                  fontSize=\"small\"\n                />\n              </div>\n              <Popover\n                id={id}\n                open={isDisclaimerOpen}\n                classes={{root: classesPopOver.root}}\n                anchorEl={anchorEl}\n                onClose={handleDisclaimerClose}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                <h6\n                  style={{\n                    paddingLeft: '0.5rem',\n                    color: '#343a40',\n                    margin: '0.3rem 0rem',\n                  }}\n                >\n                  <p>\n                    We are a community sourced listing platform and are not\n                    associated with any of the organisations listed below.\n                  </p>\n                  <p>\n                    Although we verify all our listings, we request you to\n                    follow all the guidelines and take necessary precautions.\n                  </p>\n                  <p>\n                    We encourage you to report any error or suspicious activity\n                    so we can take immediate action.\n                  </p>\n                </h6>\n              </Popover>\n            </div>\n            <div className=\"resourcefilters\">\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  State/UT\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"stateselect\"\n                  value={indianstate}\n                  onChange={changeIndianState}\n                  defaultValue=\"all\"\n                  label=\"State/UT\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All states\n                  </option>\n                  {getIndianStateOptions()}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  City\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"cityselect1\"\n                  value={city}\n                  onChange={changeCity}\n                  defaultValue=\"all\"\n                  label=\"City\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All cities\n                  </option>\n                  {getCityOptions()}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  Services\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"categoryselect\"\n                  value={category}\n                  onChange={changeCategory}\n                  defaultValue=\"all\"\n                  label=\"Services\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All categories\n                  </option>\n                  {getCategoryOptions()}\n                </Select>\n              </FormControl>\n              <button\n                className=\"button is-purple\"\n                disabled={!indianstate}\n                onClick={filterTable}\n                style={!indianstate ? {pointerEvents: 'none'} : null}\n              >\n                Search\n              </button>\n            </div>\n            <div\n              className=\"misclinkscontainer\"\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                width: '100%',\n                justifyContent: 'center',\n                marginTop: '0.2rem',\n                marginBottom: '0.6rem',\n              }}\n            >\n              <a\n                href=\"https://docs.google.com/forms/d/e/1FAIpQLSfquevp7_rdgdEoDgTdimWwTXO3B9TjFEAm3DbrMDXxCiuwuA/viewform\"\n                className=\"button add-entry is-purple\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{margin: '0rem 0.2rem', padding: '0.1rem 0.5rem'}}\n              >\n                <span>Add Entry</span>\n              </a>\n              <a\n                href=\"https://forms.gle/AG5hmYxyhto3NjU46\"\n                className=\"button add-entry is-purple\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{margin: '0rem 0.2rem', padding: '0.1rem 0.5rem'}}\n              >\n                <span>Feedback</span>\n              </a>\n              <button\n                onClick={openSharingTray}\n                className=\"button add-entry is-purple\"\n                style={{margin: '0rem 0.2rem', padding: '0.4rem'}}\n              >\n                <span>Share</span>\n              </button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      {showTable && (\n        <React.Fragment>\n          <ResourceTable\n            columns={memocols}\n            data={partData}\n            totalCount={data.length}\n            isDesktop={isDesktop}\n            onScrollUpdate={appendData}\n            city={city}\n            category={category}\n            indianstate={indianstate}\n          />\n          <div>\n            <Fab\n              color=\"inherit\"\n              aria-label=\"gototop\"\n              id=\"gototopbtn\"\n              onClick={topFunction}\n              size=\"small\"\n              style={{\n                position: 'fixed',\n                bottom: '1rem',\n                right: '1rem',\n                zIndex: '1000',\n              }}\n            >\n              <NavigationOutlinedIcon htmlColor=\"#201aa299\" />\n            </Fab>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default Resources;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport * as Icon from 'react-feather';\n\nimport './App.scss';\n\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport Links from './components/links';\nimport FAQ from './components/faq';\nimport Banner from './components/banner';\nimport PatientDB from './components/patientdb';\nimport DeepDive from './components/deepdive';\nimport Resources from './components/resources';\n/* import PatientDB from './components/patientdb';*/\n\nconst history = require('history').createBrowserHistory;\n\nfunction App() {\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: 'Home',\n      animationDelayForNavbar: 0.2,\n    },\n    {\n      pageLink: '/demographics',\n      view: PatientDB,\n      displayName: 'Demographics',\n      animationDelayForNavbar: 0.3,\n    },\n    {\n      pageLink: '/deepdive',\n      view: DeepDive,\n      displayName: 'Deep Dive',\n      animationDelayForNavbar: 0.4,\n    },\n    {\n      pageLink: '/links',\n      view: Links,\n      displayName: 'Helpful Links',\n      animationDelayForNavbar: 0.4,\n    },\n    {\n      pageLink: '/faq',\n      view: FAQ,\n      displayName: 'About',\n      animationDelayForNavbar: 0.5,\n    },\n    {\n      pageLink: '/essentials',\n      view: Resources,\n      displayName: 'Essentials',\n      animationDelayForNavbar: 0.7,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              <Navbar pages={pages} />\n              <Banner />\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n              <Switch location={location}>\n                {pages.map((page, i) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={i}\n                    />\n                  );\n                })}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n        {/* <img\n          src=\"/icon.png\"\n          alt=\"https://www.covid19india.org | Coronavirus cases live dashboard\"\n        />*/}\n\n        <h5>We stand with everyone fighting on the frontlines</h5>\n        <div className=\"link\">\n          <a\n            href=\"https://github.com/covid19india\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            covid19india\n          </a>\n        </div>\n        <a\n          href=\"https://github.com/covid19india/covid19india-react\"\n          className=\"button github\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.GitHub />\n          <span>Open Sourced on GitHub</span>\n        </a>\n        <a\n          className=\"button excel\"\n          href=\"https://bit.ly/patientdb\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.Database />\n          <span>Crowdsourced Patient Database&nbsp;</span>\n        </a>\n        <a\n          href=\"https://twitter.com/covid19indiaorg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"button twitter\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Twitter />\n          <span>View updates on Twitter</span>\n        </a>\n        <a\n          href=\"https://bit.ly/covid19crowd\"\n          className=\"button telegram\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.MessageCircle />\n          <span>Join Telegram to Collaborate!</span>\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}